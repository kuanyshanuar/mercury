// Code generated by MockGen. DO NOT EDIT.
// Source: gitlab.com/zharzhanov/mercury/internal/domain (interfaces: ProfileRedisRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "gitlab.com/zharzhanov/mercury/internal/domain"
)

// MockProfileRedisRepository is a mock of ProfileRedisRepository interface.
type MockProfileRedisRepository struct {
	ctrl     *gomock.Controller
	recorder *MockProfileRedisRepositoryMockRecorder
}

// MockProfileRedisRepositoryMockRecorder is the mock recorder for MockProfileRedisRepository.
type MockProfileRedisRepositoryMockRecorder struct {
	mock *MockProfileRedisRepository
}

// NewMockProfileRedisRepository creates a new mock instance.
func NewMockProfileRedisRepository(ctrl *gomock.Controller) *MockProfileRedisRepository {
	mock := &MockProfileRedisRepository{ctrl: ctrl}
	mock.recorder = &MockProfileRedisRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfileRedisRepository) EXPECT() *MockProfileRedisRepositoryMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockProfileRedisRepository) Delete(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockProfileRedisRepositoryMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockProfileRedisRepository)(nil).Delete), arg0, arg1)
}

// Get mocks base method.
func (m *MockProfileRedisRepository) Get(arg0 context.Context, arg1 string) (*domain.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*domain.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockProfileRedisRepositoryMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockProfileRedisRepository)(nil).Get), arg0, arg1)
}

// Set mocks base method.
func (m *MockProfileRedisRepository) Set(arg0 context.Context, arg1 string, arg2 *domain.Profile, arg3 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockProfileRedisRepositoryMockRecorder) Set(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockProfileRedisRepository)(nil).Set), arg0, arg1, arg2, arg3)
}
