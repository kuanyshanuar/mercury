// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: residenceserviceapi_cottage_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCottageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cottage *CottageWrite `protobuf:"bytes,1,opt,name=cottage,proto3" json:"cottage,omitempty"`
}

func (x *CreateCottageRequest) Reset() {
	*x = CreateCottageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCottageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCottageRequest) ProtoMessage() {}

func (x *CreateCottageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCottageRequest.ProtoReflect.Descriptor instead.
func (*CreateCottageRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCottageRequest) GetCottage() *CottageWrite {
	if x != nil {
		return x.Cottage
	}
	return nil
}

type CreateCottageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cottage *CottageRead `protobuf:"bytes,1,opt,name=cottage,proto3" json:"cottage,omitempty"`
}

func (x *CreateCottageResponse) Reset() {
	*x = CreateCottageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCottageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCottageResponse) ProtoMessage() {}

func (x *CreateCottageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCottageResponse.ProtoReflect.Descriptor instead.
func (*CreateCottageResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCottageResponse) GetCottage() *CottageRead {
	if x != nil {
		return x.Cottage
	}
	return nil
}

type UpdateCottageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Cottage *CottageWrite `protobuf:"bytes,2,opt,name=cottage,proto3" json:"cottage,omitempty"`
}

func (x *UpdateCottageRequest) Reset() {
	*x = UpdateCottageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCottageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCottageRequest) ProtoMessage() {}

func (x *UpdateCottageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCottageRequest.ProtoReflect.Descriptor instead.
func (*UpdateCottageRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateCottageRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCottageRequest) GetCottage() *CottageWrite {
	if x != nil {
		return x.Cottage
	}
	return nil
}

type UpdateCottageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cottage *CottageRead `protobuf:"bytes,1,opt,name=cottage,proto3" json:"cottage,omitempty"`
}

func (x *UpdateCottageResponse) Reset() {
	*x = UpdateCottageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCottageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCottageResponse) ProtoMessage() {}

func (x *UpdateCottageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCottageResponse.ProtoReflect.Descriptor instead.
func (*UpdateCottageResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateCottageResponse) GetCottage() *CottageRead {
	if x != nil {
		return x.Cottage
	}
	return nil
}

type DeleteCottageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCottageRequest) Reset() {
	*x = DeleteCottageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCottageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCottageRequest) ProtoMessage() {}

func (x *DeleteCottageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCottageRequest.ProtoReflect.Descriptor instead.
func (*DeleteCottageRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteCottageRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCottageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCottageResponse) Reset() {
	*x = DeleteCottageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCottageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCottageResponse) ProtoMessage() {}

func (x *DeleteCottageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCottageResponse.ProtoReflect.Descriptor instead.
func (*DeleteCottageResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{5}
}

type GetCottageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetCottageRequest) Reset() {
	*x = GetCottageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCottageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCottageRequest) ProtoMessage() {}

func (x *GetCottageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCottageRequest.ProtoReflect.Descriptor instead.
func (*GetCottageRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetCottageRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetCottageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cottage *CottageRead `protobuf:"bytes,1,opt,name=cottage,proto3" json:"cottage,omitempty"`
}

func (x *GetCottageResponse) Reset() {
	*x = GetCottageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCottageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCottageResponse) ProtoMessage() {}

func (x *GetCottageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCottageResponse.ProtoReflect.Descriptor instead.
func (*GetCottageResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetCottageResponse) GetCottage() *CottageRead {
	if x != nil {
		return x.Cottage
	}
	return nil
}

type ListCottagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Criteria *CottageSearchCriteria `protobuf:"bytes,1,opt,name=criteria,proto3" json:"criteria,omitempty"`
}

func (x *ListCottagesRequest) Reset() {
	*x = ListCottagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCottagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCottagesRequest) ProtoMessage() {}

func (x *ListCottagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCottagesRequest.ProtoReflect.Descriptor instead.
func (*ListCottagesRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListCottagesRequest) GetCriteria() *CottageSearchCriteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

type ListCottagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cottage    []*CottageRead `protobuf:"bytes,1,rep,name=cottage,proto3" json:"cottage,omitempty"`
	TotalCount int64          `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListCottagesResponse) Reset() {
	*x = ListCottagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCottagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCottagesResponse) ProtoMessage() {}

func (x *ListCottagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCottagesResponse.ProtoReflect.Descriptor instead.
func (*ListCottagesResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListCottagesResponse) GetCottage() []*CottageRead {
	if x != nil {
		return x.Cottage
	}
	return nil
}

func (x *ListCottagesResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ListCottageByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ListCottageByIDRequest) Reset() {
	*x = ListCottageByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCottageByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCottageByIDRequest) ProtoMessage() {}

func (x *ListCottageByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCottageByIDRequest.ProtoReflect.Descriptor instead.
func (*ListCottageByIDRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListCottageByIDRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ListCottageByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cottage []*CottageRead `protobuf:"bytes,1,rep,name=cottage,proto3" json:"cottage,omitempty"`
}

func (x *ListCottageByIDResponse) Reset() {
	*x = ListCottageByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCottageByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCottageByIDResponse) ProtoMessage() {}

func (x *ListCottageByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCottageByIDResponse.ProtoReflect.Descriptor instead.
func (*ListCottageByIDResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListCottageByIDResponse) GetCottage() []*CottageRead {
	if x != nil {
		return x.Cottage
	}
	return nil
}

type ListPopularCottagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Criteria *CottageSearchCriteria `protobuf:"bytes,1,opt,name=criteria,proto3" json:"criteria,omitempty"`
}

func (x *ListPopularCottagesRequest) Reset() {
	*x = ListPopularCottagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPopularCottagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPopularCottagesRequest) ProtoMessage() {}

func (x *ListPopularCottagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPopularCottagesRequest.ProtoReflect.Descriptor instead.
func (*ListPopularCottagesRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListPopularCottagesRequest) GetCriteria() *CottageSearchCriteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

type ListPopularCottagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cottage    []*CottageRead `protobuf:"bytes,1,rep,name=cottage,proto3" json:"cottage,omitempty"`
	TotalCount int64          `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListPopularCottagesResponse) Reset() {
	*x = ListPopularCottagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPopularCottagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPopularCottagesResponse) ProtoMessage() {}

func (x *ListPopularCottagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPopularCottagesResponse.ProtoReflect.Descriptor instead.
func (*ListPopularCottagesResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListPopularCottagesResponse) GetCottage() []*CottageRead {
	if x != nil {
		return x.Cottage
	}
	return nil
}

func (x *ListPopularCottagesResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type CreateCottagePlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *HousePlanWrite `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *CreateCottagePlanRequest) Reset() {
	*x = CreateCottagePlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCottagePlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCottagePlanRequest) ProtoMessage() {}

func (x *CreateCottagePlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCottagePlanRequest.ProtoReflect.Descriptor instead.
func (*CreateCottagePlanRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{14}
}

func (x *CreateCottagePlanRequest) GetPlan() *HousePlanWrite {
	if x != nil {
		return x.Plan
	}
	return nil
}

type CreateCottagePlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *HousePlanRead `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *CreateCottagePlanResponse) Reset() {
	*x = CreateCottagePlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCottagePlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCottagePlanResponse) ProtoMessage() {}

func (x *CreateCottagePlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCottagePlanResponse.ProtoReflect.Descriptor instead.
func (*CreateCottagePlanResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{15}
}

func (x *CreateCottagePlanResponse) GetPlan() *HousePlanRead {
	if x != nil {
		return x.Plan
	}
	return nil
}

type UpdateCottagePlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId int64           `protobuf:"varint,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	Plan   *HousePlanWrite `protobuf:"bytes,2,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *UpdateCottagePlanRequest) Reset() {
	*x = UpdateCottagePlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCottagePlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCottagePlanRequest) ProtoMessage() {}

func (x *UpdateCottagePlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCottagePlanRequest.ProtoReflect.Descriptor instead.
func (*UpdateCottagePlanRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateCottagePlanRequest) GetPlanId() int64 {
	if x != nil {
		return x.PlanId
	}
	return 0
}

func (x *UpdateCottagePlanRequest) GetPlan() *HousePlanWrite {
	if x != nil {
		return x.Plan
	}
	return nil
}

type UpdateCottagePlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *HousePlanRead `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *UpdateCottagePlanResponse) Reset() {
	*x = UpdateCottagePlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCottagePlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCottagePlanResponse) ProtoMessage() {}

func (x *UpdateCottagePlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCottagePlanResponse.ProtoReflect.Descriptor instead.
func (*UpdateCottagePlanResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateCottagePlanResponse) GetPlan() *HousePlanRead {
	if x != nil {
		return x.Plan
	}
	return nil
}

type DeleteCottagePlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan int64 `protobuf:"varint,1,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *DeleteCottagePlanRequest) Reset() {
	*x = DeleteCottagePlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCottagePlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCottagePlanRequest) ProtoMessage() {}

func (x *DeleteCottagePlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCottagePlanRequest.ProtoReflect.Descriptor instead.
func (*DeleteCottagePlanRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteCottagePlanRequest) GetPlan() int64 {
	if x != nil {
		return x.Plan
	}
	return 0
}

type DeleteCottagePlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCottagePlanResponse) Reset() {
	*x = DeleteCottagePlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCottagePlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCottagePlanResponse) ProtoMessage() {}

func (x *DeleteCottagePlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_cottage_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCottagePlanResponse.ProtoReflect.Descriptor instead.
func (*DeleteCottagePlanResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_cottage_service_proto_rawDescGZIP(), []int{19}
}

var File_residenceserviceapi_cottage_service_proto protoreflect.FileDescriptor

var file_residenceserviceapi_cottage_service_proto_rawDesc = []byte{
	0x0a, 0x29, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x1a, 0x27, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x76, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x07, 0x63, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x74,
	0x74, 0x61, 0x67, 0x65, 0x22, 0x76, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a,
	0x07, 0x63, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43,
	0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x22, 0x86, 0x01, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x5e, 0x0a, 0x07, 0x63, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x07, 0x63, 0x6f,
	0x74, 0x74, 0x61, 0x67, 0x65, 0x22, 0x76, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d,
	0x0a, 0x07, 0x63, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x43, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x22, 0x26, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x73, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x07, 0x63, 0x6f, 0x74,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x07, 0x63, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x69, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x74, 0x74,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0x96, 0x01, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x07, 0x63, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x74, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2a, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x74, 0x74,
	0x61, 0x67, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0x78, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x07, 0x63,
	0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72,
	0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61,
	0x64, 0x52, 0x07, 0x63, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x1a, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x08, 0x63, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x69,
	0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79,
	0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x22, 0x9d, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70,
	0x75, 0x6c, 0x61, 0x72, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x07, 0x63, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x74, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x76, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x74, 0x74, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x5a, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46,
	0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x76, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x04, 0x70, 0x6c, 0x61,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x04,
	0x70, 0x6c, 0x61, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x04, 0x70, 0x6c,
	0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65,
	0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x76, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x2e,
	0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c,
	0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x1b,
	0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x96, 0x0e, 0x0a, 0x0e,
	0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xac,
	0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x4c, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d,
	0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xac, 0x01,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x12,
	0x4c, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e,
	0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75,
	0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x74,
	0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xac, 0x01, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x12, 0x4c,
	0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72,
	0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x74, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa3, 0x01, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x12, 0x49, 0x2e, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0xa9, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x4c, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x74,
	0x74, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xb2, 0x01,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0xbe, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c,
	0x61, 0x72, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x73, 0x12, 0x52, 0x2e, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x43,
	0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x53,
	0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x75,
	0x6c, 0x61, 0x72, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0xb8, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x74, 0x74, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x51, 0x2e, 0x67, 0x69,
	0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79,
	0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x74, 0x74, 0x61,
	0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xb8,
	0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0x12, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x51, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xb8, 0x01, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12,
	0x50, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x51, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2f, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_residenceserviceapi_cottage_service_proto_rawDescOnce sync.Once
	file_residenceserviceapi_cottage_service_proto_rawDescData = file_residenceserviceapi_cottage_service_proto_rawDesc
)

func file_residenceserviceapi_cottage_service_proto_rawDescGZIP() []byte {
	file_residenceserviceapi_cottage_service_proto_rawDescOnce.Do(func() {
		file_residenceserviceapi_cottage_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_residenceserviceapi_cottage_service_proto_rawDescData)
	})
	return file_residenceserviceapi_cottage_service_proto_rawDescData
}

var file_residenceserviceapi_cottage_service_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_residenceserviceapi_cottage_service_proto_goTypes = []interface{}{
	(*CreateCottageRequest)(nil),        // 0: gitlab.com.mercury.residenceservice.generated.model.v1.CreateCottageRequest
	(*CreateCottageResponse)(nil),       // 1: gitlab.com.mercury.residenceservice.generated.model.v1.CreateCottageResponse
	(*UpdateCottageRequest)(nil),        // 2: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateCottageRequest
	(*UpdateCottageResponse)(nil),       // 3: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateCottageResponse
	(*DeleteCottageRequest)(nil),        // 4: gitlab.com.mercury.residenceservice.generated.model.v1.DeleteCottageRequest
	(*DeleteCottageResponse)(nil),       // 5: gitlab.com.mercury.residenceservice.generated.model.v1.DeleteCottageResponse
	(*GetCottageRequest)(nil),           // 6: gitlab.com.mercury.residenceservice.generated.model.v1.GetCottageRequest
	(*GetCottageResponse)(nil),          // 7: gitlab.com.mercury.residenceservice.generated.model.v1.GetCottageResponse
	(*ListCottagesRequest)(nil),         // 8: gitlab.com.mercury.residenceservice.generated.model.v1.ListCottagesRequest
	(*ListCottagesResponse)(nil),        // 9: gitlab.com.mercury.residenceservice.generated.model.v1.ListCottagesResponse
	(*ListCottageByIDRequest)(nil),      // 10: gitlab.com.mercury.residenceservice.generated.model.v1.ListCottageByIDRequest
	(*ListCottageByIDResponse)(nil),     // 11: gitlab.com.mercury.residenceservice.generated.model.v1.ListCottageByIDResponse
	(*ListPopularCottagesRequest)(nil),  // 12: gitlab.com.mercury.residenceservice.generated.model.v1.ListPopularCottagesRequest
	(*ListPopularCottagesResponse)(nil), // 13: gitlab.com.mercury.residenceservice.generated.model.v1.ListPopularCottagesResponse
	(*CreateCottagePlanRequest)(nil),    // 14: gitlab.com.mercury.residenceservice.generated.model.v1.CreateCottagePlanRequest
	(*CreateCottagePlanResponse)(nil),   // 15: gitlab.com.mercury.residenceservice.generated.model.v1.CreateCottagePlanResponse
	(*UpdateCottagePlanRequest)(nil),    // 16: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateCottagePlanRequest
	(*UpdateCottagePlanResponse)(nil),   // 17: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateCottagePlanResponse
	(*DeleteCottagePlanRequest)(nil),    // 18: gitlab.com.mercury.residenceservice.generated.model.v1.DeleteCottagePlanRequest
	(*DeleteCottagePlanResponse)(nil),   // 19: gitlab.com.mercury.residenceservice.generated.model.v1.DeleteCottagePlanResponse
	(*CottageWrite)(nil),                // 20: gitlab.com.mercury.residenceservice.generated.model.v1.CottageWrite
	(*CottageRead)(nil),                 // 21: gitlab.com.mercury.residenceservice.generated.model.v1.CottageRead
	(*CottageSearchCriteria)(nil),       // 22: gitlab.com.mercury.residenceservice.generated.model.v1.CottageSearchCriteria
	(*HousePlanWrite)(nil),              // 23: gitlab.com.mercury.residenceservice.generated.model.v1.HousePlanWrite
	(*HousePlanRead)(nil),               // 24: gitlab.com.mercury.residenceservice.generated.model.v1.HousePlanRead
}
var file_residenceserviceapi_cottage_service_proto_depIdxs = []int32{
	20, // 0: gitlab.com.mercury.residenceservice.generated.model.v1.CreateCottageRequest.cottage:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.CottageWrite
	21, // 1: gitlab.com.mercury.residenceservice.generated.model.v1.CreateCottageResponse.cottage:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.CottageRead
	20, // 2: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateCottageRequest.cottage:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.CottageWrite
	21, // 3: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateCottageResponse.cottage:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.CottageRead
	21, // 4: gitlab.com.mercury.residenceservice.generated.model.v1.GetCottageResponse.cottage:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.CottageRead
	22, // 5: gitlab.com.mercury.residenceservice.generated.model.v1.ListCottagesRequest.criteria:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.CottageSearchCriteria
	21, // 6: gitlab.com.mercury.residenceservice.generated.model.v1.ListCottagesResponse.cottage:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.CottageRead
	21, // 7: gitlab.com.mercury.residenceservice.generated.model.v1.ListCottageByIDResponse.cottage:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.CottageRead
	22, // 8: gitlab.com.mercury.residenceservice.generated.model.v1.ListPopularCottagesRequest.criteria:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.CottageSearchCriteria
	21, // 9: gitlab.com.mercury.residenceservice.generated.model.v1.ListPopularCottagesResponse.cottage:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.CottageRead
	23, // 10: gitlab.com.mercury.residenceservice.generated.model.v1.CreateCottagePlanRequest.plan:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.HousePlanWrite
	24, // 11: gitlab.com.mercury.residenceservice.generated.model.v1.CreateCottagePlanResponse.plan:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.HousePlanRead
	23, // 12: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateCottagePlanRequest.plan:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.HousePlanWrite
	24, // 13: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateCottagePlanResponse.plan:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.HousePlanRead
	0,  // 14: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.CreateCottage:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.CreateCottageRequest
	2,  // 15: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.UpdateCottage:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.UpdateCottageRequest
	4,  // 16: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.DeleteCottage:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.DeleteCottageRequest
	6,  // 17: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.GetCottage:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.GetCottageRequest
	8,  // 18: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.ListCottages:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.ListCottagesRequest
	10, // 19: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.ListCottageByID:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.ListCottageByIDRequest
	12, // 20: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.ListPopularCottages:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.ListPopularCottagesRequest
	14, // 21: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.CreateCottagePlan:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.CreateCottagePlanRequest
	16, // 22: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.UpdateCottagePlan:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.UpdateCottagePlanRequest
	18, // 23: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.DeleteCottagePlan:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.DeleteCottagePlanRequest
	1,  // 24: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.CreateCottage:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.CreateCottageResponse
	3,  // 25: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.UpdateCottage:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.UpdateCottageResponse
	5,  // 26: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.DeleteCottage:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.DeleteCottageResponse
	7,  // 27: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.GetCottage:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.GetCottageResponse
	9,  // 28: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.ListCottages:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.ListCottagesResponse
	11, // 29: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.ListCottageByID:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.ListCottageByIDResponse
	13, // 30: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.ListPopularCottages:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.ListPopularCottagesResponse
	15, // 31: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.CreateCottagePlan:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.CreateCottagePlanResponse
	17, // 32: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.UpdateCottagePlan:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.UpdateCottagePlanResponse
	19, // 33: gitlab.com.mercury.residenceservice.generated.model.v1.CottageService.DeleteCottagePlan:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.DeleteCottagePlanResponse
	24, // [24:34] is the sub-list for method output_type
	14, // [14:24] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_residenceserviceapi_cottage_service_proto_init() }
func file_residenceserviceapi_cottage_service_proto_init() {
	if File_residenceserviceapi_cottage_service_proto != nil {
		return
	}
	file_residenceserviceapi_cottage_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_residenceserviceapi_cottage_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCottageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCottageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCottageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCottageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCottageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCottageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCottageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCottageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCottagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCottagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCottageByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCottageByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPopularCottagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPopularCottagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCottagePlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCottagePlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCottagePlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCottagePlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCottagePlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_cottage_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCottagePlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_residenceserviceapi_cottage_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_residenceserviceapi_cottage_service_proto_goTypes,
		DependencyIndexes: file_residenceserviceapi_cottage_service_proto_depIdxs,
		MessageInfos:      file_residenceserviceapi_cottage_service_proto_msgTypes,
	}.Build()
	File_residenceserviceapi_cottage_service_proto = out.File
	file_residenceserviceapi_cottage_service_proto_rawDesc = nil
	file_residenceserviceapi_cottage_service_proto_goTypes = nil
	file_residenceserviceapi_cottage_service_proto_depIdxs = nil
}
