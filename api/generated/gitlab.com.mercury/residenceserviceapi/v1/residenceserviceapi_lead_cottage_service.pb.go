// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: residenceserviceapi_lead_cottage_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateLeadCottageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeadCottage *LeadCottageWrite `protobuf:"bytes,1,opt,name=lead_cottage,json=leadCottage,proto3" json:"lead_cottage,omitempty"`
}

func (x *CreateLeadCottageRequest) Reset() {
	*x = CreateLeadCottageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLeadCottageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeadCottageRequest) ProtoMessage() {}

func (x *CreateLeadCottageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLeadCottageRequest.ProtoReflect.Descriptor instead.
func (*CreateLeadCottageRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_cottage_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateLeadCottageRequest) GetLeadCottage() *LeadCottageWrite {
	if x != nil {
		return x.LeadCottage
	}
	return nil
}

type CreateLeadCottageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeadId int64 `protobuf:"varint,1,opt,name=lead_id,json=leadId,proto3" json:"lead_id,omitempty"`
}

func (x *CreateLeadCottageResponse) Reset() {
	*x = CreateLeadCottageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLeadCottageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeadCottageResponse) ProtoMessage() {}

func (x *CreateLeadCottageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLeadCottageResponse.ProtoReflect.Descriptor instead.
func (*CreateLeadCottageResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_cottage_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateLeadCottageResponse) GetLeadId() int64 {
	if x != nil {
		return x.LeadId
	}
	return 0
}

type UpdateLeadCottageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeadId      int64             `protobuf:"varint,1,opt,name=lead_id,json=leadId,proto3" json:"lead_id,omitempty"`
	LeadCottage *LeadCottageWrite `protobuf:"bytes,2,opt,name=lead_cottage,json=leadCottage,proto3" json:"lead_cottage,omitempty"`
}

func (x *UpdateLeadCottageRequest) Reset() {
	*x = UpdateLeadCottageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLeadCottageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLeadCottageRequest) ProtoMessage() {}

func (x *UpdateLeadCottageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLeadCottageRequest.ProtoReflect.Descriptor instead.
func (*UpdateLeadCottageRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_cottage_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateLeadCottageRequest) GetLeadId() int64 {
	if x != nil {
		return x.LeadId
	}
	return 0
}

func (x *UpdateLeadCottageRequest) GetLeadCottage() *LeadCottageWrite {
	if x != nil {
		return x.LeadCottage
	}
	return nil
}

type UpdateLeadCottageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateLeadCottageResponse) Reset() {
	*x = UpdateLeadCottageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLeadCottageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLeadCottageResponse) ProtoMessage() {}

func (x *UpdateLeadCottageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLeadCottageResponse.ProtoReflect.Descriptor instead.
func (*UpdateLeadCottageResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_cottage_service_proto_rawDescGZIP(), []int{3}
}

type GetLeadCottageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeadId int64 `protobuf:"varint,1,opt,name=lead_id,json=leadId,proto3" json:"lead_id,omitempty"`
}

func (x *GetLeadCottageRequest) Reset() {
	*x = GetLeadCottageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeadCottageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeadCottageRequest) ProtoMessage() {}

func (x *GetLeadCottageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeadCottageRequest.ProtoReflect.Descriptor instead.
func (*GetLeadCottageRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_cottage_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetLeadCottageRequest) GetLeadId() int64 {
	if x != nil {
		return x.LeadId
	}
	return 0
}

type GetLeadCottageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeadCottage *LeadCottageRead `protobuf:"bytes,1,opt,name=lead_cottage,json=leadCottage,proto3" json:"lead_cottage,omitempty"`
}

func (x *GetLeadCottageResponse) Reset() {
	*x = GetLeadCottageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeadCottageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeadCottageResponse) ProtoMessage() {}

func (x *GetLeadCottageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeadCottageResponse.ProtoReflect.Descriptor instead.
func (*GetLeadCottageResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_cottage_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetLeadCottageResponse) GetLeadCottage() *LeadCottageRead {
	if x != nil {
		return x.LeadCottage
	}
	return nil
}

type ListLeadCottagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Criteria *LeadCottageSearchCriteria `protobuf:"bytes,1,opt,name=criteria,proto3" json:"criteria,omitempty"`
}

func (x *ListLeadCottagesRequest) Reset() {
	*x = ListLeadCottagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLeadCottagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLeadCottagesRequest) ProtoMessage() {}

func (x *ListLeadCottagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLeadCottagesRequest.ProtoReflect.Descriptor instead.
func (*ListLeadCottagesRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_cottage_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListLeadCottagesRequest) GetCriteria() *LeadCottageSearchCriteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

type ListLeadCottagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeadCottages []*LeadCottageRead `protobuf:"bytes,1,rep,name=lead_cottages,json=leadCottages,proto3" json:"lead_cottages,omitempty"`
	Total        int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListLeadCottagesResponse) Reset() {
	*x = ListLeadCottagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLeadCottagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLeadCottagesResponse) ProtoMessage() {}

func (x *ListLeadCottagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLeadCottagesResponse.ProtoReflect.Descriptor instead.
func (*ListLeadCottagesResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_cottage_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListLeadCottagesResponse) GetLeadCottages() []*LeadCottageRead {
	if x != nil {
		return x.LeadCottages
	}
	return nil
}

func (x *ListLeadCottagesResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DeleteLeadCottageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeadId int64 `protobuf:"varint,1,opt,name=lead_id,json=leadId,proto3" json:"lead_id,omitempty"`
}

func (x *DeleteLeadCottageRequest) Reset() {
	*x = DeleteLeadCottageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLeadCottageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLeadCottageRequest) ProtoMessage() {}

func (x *DeleteLeadCottageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLeadCottageRequest.ProtoReflect.Descriptor instead.
func (*DeleteLeadCottageRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_cottage_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteLeadCottageRequest) GetLeadId() int64 {
	if x != nil {
		return x.LeadId
	}
	return 0
}

type DeleteLeadCottageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteLeadCottageResponse) Reset() {
	*x = DeleteLeadCottageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLeadCottageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLeadCottageResponse) ProtoMessage() {}

func (x *DeleteLeadCottageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_cottage_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLeadCottageResponse.ProtoReflect.Descriptor instead.
func (*DeleteLeadCottageResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_cottage_service_proto_rawDescGZIP(), []int{9}
}

var File_residenceserviceapi_lead_cottage_service_proto protoreflect.FileDescriptor

var file_residenceserviceapi_lead_cottage_service_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x61, 0x70, 0x69, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x74, 0x74, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x36, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x2c, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x70, 0x69, 0x5f, 0x6c, 0x65,
	0x61, 0x64, 0x5f, 0x63, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x18, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x6b, 0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x74, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65,
	0x22, 0x34, 0x0a, 0x19, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6c, 0x65, 0x61, 0x64, 0x49, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x6b, 0x0a, 0x0c,
	0x6c, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64,
	0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x0b, 0x6c, 0x65,
	0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x4c, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x67, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x74, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x22,
	0x88, 0x01, 0x0a, 0x17, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6d, 0x0a, 0x08, 0x63,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x51, 0x2e,
	0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75,
	0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0x9e, 0x01, 0x0a, 0x18, 0x6c,
	0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x5f,
	0x63, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47,
	0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x0c, 0x6c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74,
	0x74, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x33, 0x0a, 0x18, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x49, 0x64,
	0x22, 0x1b, 0x0a, 0x19, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xaf, 0x07,
	0x0a, 0x12, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0xb8, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x12, 0x50, 0x2e, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x51, 0x2e, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72,
	0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64,
	0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0xb8, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x74, 0x74, 0x61, 0x67, 0x65, 0x12, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x51, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xaf, 0x01, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x2e,
	0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75,
	0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x67, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72,
	0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x67, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74,
	0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xb5, 0x01, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x4c,
	0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x69, 0x73, 0x74,
	0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0xb8, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x65, 0x61, 0x64, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x12, 0x50, 0x2e, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x51, 0x2e, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72,
	0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64,
	0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x75, 0x72, 0x79, 0x2f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_residenceserviceapi_lead_cottage_service_proto_rawDescOnce sync.Once
	file_residenceserviceapi_lead_cottage_service_proto_rawDescData = file_residenceserviceapi_lead_cottage_service_proto_rawDesc
)

func file_residenceserviceapi_lead_cottage_service_proto_rawDescGZIP() []byte {
	file_residenceserviceapi_lead_cottage_service_proto_rawDescOnce.Do(func() {
		file_residenceserviceapi_lead_cottage_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_residenceserviceapi_lead_cottage_service_proto_rawDescData)
	})
	return file_residenceserviceapi_lead_cottage_service_proto_rawDescData
}

var file_residenceserviceapi_lead_cottage_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_residenceserviceapi_lead_cottage_service_proto_goTypes = []interface{}{
	(*CreateLeadCottageRequest)(nil),  // 0: gitlab.com.mercury.residenceservice.generated.model.v1.createLeadCottageRequest
	(*CreateLeadCottageResponse)(nil), // 1: gitlab.com.mercury.residenceservice.generated.model.v1.createLeadCottageResponse
	(*UpdateLeadCottageRequest)(nil),  // 2: gitlab.com.mercury.residenceservice.generated.model.v1.updateLeadCottageRequest
	(*UpdateLeadCottageResponse)(nil), // 3: gitlab.com.mercury.residenceservice.generated.model.v1.updateLeadCottageResponse
	(*GetLeadCottageRequest)(nil),     // 4: gitlab.com.mercury.residenceservice.generated.model.v1.getLeadCottageRequest
	(*GetLeadCottageResponse)(nil),    // 5: gitlab.com.mercury.residenceservice.generated.model.v1.getLeadCottageResponse
	(*ListLeadCottagesRequest)(nil),   // 6: gitlab.com.mercury.residenceservice.generated.model.v1.listLeadCottagesRequest
	(*ListLeadCottagesResponse)(nil),  // 7: gitlab.com.mercury.residenceservice.generated.model.v1.listLeadCottagesResponse
	(*DeleteLeadCottageRequest)(nil),  // 8: gitlab.com.mercury.residenceservice.generated.model.v1.deleteLeadCottageRequest
	(*DeleteLeadCottageResponse)(nil), // 9: gitlab.com.mercury.residenceservice.generated.model.v1.deleteLeadCottageResponse
	(*LeadCottageWrite)(nil),          // 10: gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageWrite
	(*LeadCottageRead)(nil),           // 11: gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageRead
	(*LeadCottageSearchCriteria)(nil), // 12: gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageSearchCriteria
}
var file_residenceserviceapi_lead_cottage_service_proto_depIdxs = []int32{
	10, // 0: gitlab.com.mercury.residenceservice.generated.model.v1.createLeadCottageRequest.lead_cottage:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageWrite
	10, // 1: gitlab.com.mercury.residenceservice.generated.model.v1.updateLeadCottageRequest.lead_cottage:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageWrite
	11, // 2: gitlab.com.mercury.residenceservice.generated.model.v1.getLeadCottageResponse.lead_cottage:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageRead
	12, // 3: gitlab.com.mercury.residenceservice.generated.model.v1.listLeadCottagesRequest.criteria:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageSearchCriteria
	11, // 4: gitlab.com.mercury.residenceservice.generated.model.v1.listLeadCottagesResponse.lead_cottages:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageRead
	0,  // 5: gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageService.CreateLeadCottage:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.createLeadCottageRequest
	2,  // 6: gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageService.UpdateLeadCottage:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.updateLeadCottageRequest
	4,  // 7: gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageService.GetLeadCottage:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.getLeadCottageRequest
	6,  // 8: gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageService.ListLeadCottages:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.listLeadCottagesRequest
	8,  // 9: gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageService.DeleteLeadCottage:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.deleteLeadCottageRequest
	1,  // 10: gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageService.CreateLeadCottage:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.createLeadCottageResponse
	3,  // 11: gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageService.UpdateLeadCottage:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.updateLeadCottageResponse
	5,  // 12: gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageService.GetLeadCottage:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.getLeadCottageResponse
	7,  // 13: gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageService.ListLeadCottages:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.listLeadCottagesResponse
	9,  // 14: gitlab.com.mercury.residenceservice.generated.model.v1.LeadCottageService.DeleteLeadCottage:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.deleteLeadCottageResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_residenceserviceapi_lead_cottage_service_proto_init() }
func file_residenceserviceapi_lead_cottage_service_proto_init() {
	if File_residenceserviceapi_lead_cottage_service_proto != nil {
		return
	}
	file_residenceserviceapi_lead_cottage_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_residenceserviceapi_lead_cottage_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLeadCottageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_lead_cottage_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLeadCottageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_lead_cottage_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLeadCottageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_lead_cottage_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLeadCottageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_lead_cottage_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeadCottageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_lead_cottage_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeadCottageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_lead_cottage_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLeadCottagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_lead_cottage_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLeadCottagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_lead_cottage_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLeadCottageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_lead_cottage_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLeadCottageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_residenceserviceapi_lead_cottage_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_residenceserviceapi_lead_cottage_service_proto_goTypes,
		DependencyIndexes: file_residenceserviceapi_lead_cottage_service_proto_depIdxs,
		MessageInfos:      file_residenceserviceapi_lead_cottage_service_proto_msgTypes,
	}.Build()
	File_residenceserviceapi_lead_cottage_service_proto = out.File
	file_residenceserviceapi_lead_cottage_service_proto_rawDesc = nil
	file_residenceserviceapi_lead_cottage_service_proto_goTypes = nil
	file_residenceserviceapi_lead_cottage_service_proto_depIdxs = nil
}
