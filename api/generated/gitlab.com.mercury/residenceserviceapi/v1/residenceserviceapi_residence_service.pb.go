// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: residenceserviceapi_residence_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateResidenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Residence *ResidenceWrite `protobuf:"bytes,1,opt,name=residence,proto3" json:"residence,omitempty"`
}

func (x *CreateResidenceRequest) Reset() {
	*x = CreateResidenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResidenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResidenceRequest) ProtoMessage() {}

func (x *CreateResidenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResidenceRequest.ProtoReflect.Descriptor instead.
func (*CreateResidenceRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateResidenceRequest) GetResidence() *ResidenceWrite {
	if x != nil {
		return x.Residence
	}
	return nil
}

type CreateResidenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Residence *ResidenceRead `protobuf:"bytes,1,opt,name=residence,proto3" json:"residence,omitempty"`
}

func (x *CreateResidenceResponse) Reset() {
	*x = CreateResidenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResidenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResidenceResponse) ProtoMessage() {}

func (x *CreateResidenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResidenceResponse.ProtoReflect.Descriptor instead.
func (*CreateResidenceResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateResidenceResponse) GetResidence() *ResidenceRead {
	if x != nil {
		return x.Residence
	}
	return nil
}

type ListResidencesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Criteria *ResidencesSearchCriteria `protobuf:"bytes,1,opt,name=criteria,proto3" json:"criteria,omitempty"`
}

func (x *ListResidencesRequest) Reset() {
	*x = ListResidencesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResidencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResidencesRequest) ProtoMessage() {}

func (x *ListResidencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResidencesRequest.ProtoReflect.Descriptor instead.
func (*ListResidencesRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListResidencesRequest) GetCriteria() *ResidencesSearchCriteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

type ListResidencesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Residences []*ResidenceRead `protobuf:"bytes,1,rep,name=residences,proto3" json:"residences,omitempty"`
	Total      int64            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListResidencesResponse) Reset() {
	*x = ListResidencesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResidencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResidencesResponse) ProtoMessage() {}

func (x *ListResidencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResidencesResponse.ProtoReflect.Descriptor instead.
func (*ListResidencesResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListResidencesResponse) GetResidences() []*ResidenceRead {
	if x != nil {
		return x.Residences
	}
	return nil
}

func (x *ListResidencesResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetResidenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetResidenceRequest) Reset() {
	*x = GetResidenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResidenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResidenceRequest) ProtoMessage() {}

func (x *GetResidenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResidenceRequest.ProtoReflect.Descriptor instead.
func (*GetResidenceRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetResidenceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetResidenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Residence *ResidenceRead `protobuf:"bytes,1,opt,name=residence,proto3" json:"residence,omitempty"`
}

func (x *GetResidenceResponse) Reset() {
	*x = GetResidenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResidenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResidenceResponse) ProtoMessage() {}

func (x *GetResidenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResidenceResponse.ProtoReflect.Descriptor instead.
func (*GetResidenceResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetResidenceResponse) GetResidence() *ResidenceRead {
	if x != nil {
		return x.Residence
	}
	return nil
}

type UpdateResidenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Residence *ResidenceWrite `protobuf:"bytes,2,opt,name=residence,proto3" json:"residence,omitempty"`
}

func (x *UpdateResidenceRequest) Reset() {
	*x = UpdateResidenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResidenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResidenceRequest) ProtoMessage() {}

func (x *UpdateResidenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResidenceRequest.ProtoReflect.Descriptor instead.
func (*UpdateResidenceRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateResidenceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateResidenceRequest) GetResidence() *ResidenceWrite {
	if x != nil {
		return x.Residence
	}
	return nil
}

type UpdateResidenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Residence *ResidenceRead `protobuf:"bytes,1,opt,name=residence,proto3" json:"residence,omitempty"`
}

func (x *UpdateResidenceResponse) Reset() {
	*x = UpdateResidenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResidenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResidenceResponse) ProtoMessage() {}

func (x *UpdateResidenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResidenceResponse.ProtoReflect.Descriptor instead.
func (*UpdateResidenceResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateResidenceResponse) GetResidence() *ResidenceRead {
	if x != nil {
		return x.Residence
	}
	return nil
}

type DeleteResidenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteResidenceRequest) Reset() {
	*x = DeleteResidenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResidenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResidenceRequest) ProtoMessage() {}

func (x *DeleteResidenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResidenceRequest.ProtoReflect.Descriptor instead.
func (*DeleteResidenceRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteResidenceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteResidenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteResidenceResponse) Reset() {
	*x = DeleteResidenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResidenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResidenceResponse) ProtoMessage() {}

func (x *DeleteResidenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResidenceResponse.ProtoReflect.Descriptor instead.
func (*DeleteResidenceResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{9}
}

type ListResidencesByIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResidenceIds []int64 `protobuf:"varint,1,rep,packed,name=residence_ids,json=residenceIds,proto3" json:"residence_ids,omitempty"`
}

func (x *ListResidencesByIDsRequest) Reset() {
	*x = ListResidencesByIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResidencesByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResidencesByIDsRequest) ProtoMessage() {}

func (x *ListResidencesByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResidencesByIDsRequest.ProtoReflect.Descriptor instead.
func (*ListResidencesByIDsRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListResidencesByIDsRequest) GetResidenceIds() []int64 {
	if x != nil {
		return x.ResidenceIds
	}
	return nil
}

type ListResidencesByIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Residences []*ResidenceRead `protobuf:"bytes,2,rep,name=residences,proto3" json:"residences,omitempty"`
}

func (x *ListResidencesByIDsResponse) Reset() {
	*x = ListResidencesByIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResidencesByIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResidencesByIDsResponse) ProtoMessage() {}

func (x *ListResidencesByIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResidencesByIDsResponse.ProtoReflect.Descriptor instead.
func (*ListResidencesByIDsResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListResidencesByIDsResponse) GetResidences() []*ResidenceRead {
	if x != nil {
		return x.Residences
	}
	return nil
}

type ListPopularResidencesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Criteria *ResidencesSearchCriteria `protobuf:"bytes,1,opt,name=criteria,proto3" json:"criteria,omitempty"`
}

func (x *ListPopularResidencesRequest) Reset() {
	*x = ListPopularResidencesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPopularResidencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPopularResidencesRequest) ProtoMessage() {}

func (x *ListPopularResidencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPopularResidencesRequest.ProtoReflect.Descriptor instead.
func (*ListPopularResidencesRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListPopularResidencesRequest) GetCriteria() *ResidencesSearchCriteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

type ListPopularResidencesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Residences []*ResidenceRead `protobuf:"bytes,1,rep,name=residences,proto3" json:"residences,omitempty"`
	Total      int64            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListPopularResidencesResponse) Reset() {
	*x = ListPopularResidencesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPopularResidencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPopularResidencesResponse) ProtoMessage() {}

func (x *ListPopularResidencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPopularResidencesResponse.ProtoReflect.Descriptor instead.
func (*ListPopularResidencesResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListPopularResidencesResponse) GetResidences() []*ResidenceRead {
	if x != nil {
		return x.Residences
	}
	return nil
}

func (x *ListPopularResidencesResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateFlatPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlatPlan *ResidenceFlatPlanWrite `protobuf:"bytes,1,opt,name=flat_plan,json=flatPlan,proto3" json:"flat_plan,omitempty"`
}

func (x *CreateFlatPlanRequest) Reset() {
	*x = CreateFlatPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFlatPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlatPlanRequest) ProtoMessage() {}

func (x *CreateFlatPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFlatPlanRequest.ProtoReflect.Descriptor instead.
func (*CreateFlatPlanRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{14}
}

func (x *CreateFlatPlanRequest) GetFlatPlan() *ResidenceFlatPlanWrite {
	if x != nil {
		return x.FlatPlan
	}
	return nil
}

type CreateFlatPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlatPlan *ResidenceFlatPlanRead `protobuf:"bytes,1,opt,name=flat_plan,json=flatPlan,proto3" json:"flat_plan,omitempty"`
}

func (x *CreateFlatPlanResponse) Reset() {
	*x = CreateFlatPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFlatPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlatPlanResponse) ProtoMessage() {}

func (x *CreateFlatPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFlatPlanResponse.ProtoReflect.Descriptor instead.
func (*CreateFlatPlanResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{15}
}

func (x *CreateFlatPlanResponse) GetFlatPlan() *ResidenceFlatPlanRead {
	if x != nil {
		return x.FlatPlan
	}
	return nil
}

type UpdateFlatPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FlatPlan *ResidenceFlatPlanWrite `protobuf:"bytes,2,opt,name=flat_plan,json=flatPlan,proto3" json:"flat_plan,omitempty"`
}

func (x *UpdateFlatPlanRequest) Reset() {
	*x = UpdateFlatPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFlatPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlatPlanRequest) ProtoMessage() {}

func (x *UpdateFlatPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlatPlanRequest.ProtoReflect.Descriptor instead.
func (*UpdateFlatPlanRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateFlatPlanRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateFlatPlanRequest) GetFlatPlan() *ResidenceFlatPlanWrite {
	if x != nil {
		return x.FlatPlan
	}
	return nil
}

type UpdateFlatPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlatPlan *ResidenceFlatPlanRead `protobuf:"bytes,1,opt,name=flat_plan,json=flatPlan,proto3" json:"flat_plan,omitempty"`
}

func (x *UpdateFlatPlanResponse) Reset() {
	*x = UpdateFlatPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFlatPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlatPlanResponse) ProtoMessage() {}

func (x *UpdateFlatPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlatPlanResponse.ProtoReflect.Descriptor instead.
func (*UpdateFlatPlanResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateFlatPlanResponse) GetFlatPlan() *ResidenceFlatPlanRead {
	if x != nil {
		return x.FlatPlan
	}
	return nil
}

type DeleteFlatPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteFlatPlanRequest) Reset() {
	*x = DeleteFlatPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFlatPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFlatPlanRequest) ProtoMessage() {}

func (x *DeleteFlatPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFlatPlanRequest.ProtoReflect.Descriptor instead.
func (*DeleteFlatPlanRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteFlatPlanRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteFlatPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFlatPlanResponse) Reset() {
	*x = DeleteFlatPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_residence_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFlatPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFlatPlanResponse) ProtoMessage() {}

func (x *DeleteFlatPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_residence_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFlatPlanResponse.ProtoReflect.Descriptor instead.
func (*DeleteFlatPlanResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_residence_service_proto_rawDescGZIP(), []int{19}
}

var File_residenceserviceapi_residence_service_proto protoreflect.FileDescriptor

var file_residenceserviceapi_residence_service_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x61, 0x70, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72,
	0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x29, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x70, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x7e, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x64, 0x0a, 0x09, 0x72, 0x65,
	0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e,
	0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75,
	0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x22, 0x7e, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45,
	0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x09, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x22, 0x85, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6c, 0x0a, 0x08, 0x63, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72,
	0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x08,
	0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0x95, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x0a,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x63, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x09, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x64, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x46, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x7e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x63, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x09, 0x72, 0x65, 0x73, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x1a, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0x84, 0x01,
	0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a,
	0x0a, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70,
	0x75, 0x6c, 0x61, 0x72, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6c, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x22, 0x9c, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x75,
	0x6c, 0x61, 0x72, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x84, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61,
	0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6b, 0x0a, 0x09,
	0x66, 0x6c, 0x61, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4e, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x08, 0x66, 0x6c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x09, 0x66, 0x6c, 0x61, 0x74, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x08, 0x66, 0x6c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x22, 0x94, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x6b, 0x0a, 0x09, 0x66, 0x6c,
	0x61, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e,
	0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75,
	0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x46, 0x6c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x08, 0x66,
	0x6c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6a, 0x0a, 0x09, 0x66, 0x6c, 0x61, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x08, 0x66, 0x6c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x22, 0x27,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xc1, 0x0e, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb4, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x4e, 0x2e, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4f, 0x2e, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb1, 0x01,
	0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x12, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x4e, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0xab, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x4c, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0xb4, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x4f, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb4, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x4e, 0x2e, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4f, 0x2e, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xc0, 0x01,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x42, 0x79, 0x49, 0x44, 0x73, 0x12, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xc6, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72,
	0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x54, 0x2e, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x55, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f,
	0x70, 0x75, 0x6c, 0x61, 0x72, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb1, 0x01, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x4d, 0x2e, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72,
	0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x67, 0x69,
	0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79,
	0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb1, 0x01,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x12, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x6c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x4e, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x6c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0xb1, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x12, 0x4d, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2f, 0x72, 0x65, 0x73, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_residenceserviceapi_residence_service_proto_rawDescOnce sync.Once
	file_residenceserviceapi_residence_service_proto_rawDescData = file_residenceserviceapi_residence_service_proto_rawDesc
)

func file_residenceserviceapi_residence_service_proto_rawDescGZIP() []byte {
	file_residenceserviceapi_residence_service_proto_rawDescOnce.Do(func() {
		file_residenceserviceapi_residence_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_residenceserviceapi_residence_service_proto_rawDescData)
	})
	return file_residenceserviceapi_residence_service_proto_rawDescData
}

var file_residenceserviceapi_residence_service_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_residenceserviceapi_residence_service_proto_goTypes = []interface{}{
	(*CreateResidenceRequest)(nil),        // 0: gitlab.com.mercury.residenceservice.generated.model.v1.CreateResidenceRequest
	(*CreateResidenceResponse)(nil),       // 1: gitlab.com.mercury.residenceservice.generated.model.v1.CreateResidenceResponse
	(*ListResidencesRequest)(nil),         // 2: gitlab.com.mercury.residenceservice.generated.model.v1.ListResidencesRequest
	(*ListResidencesResponse)(nil),        // 3: gitlab.com.mercury.residenceservice.generated.model.v1.ListResidencesResponse
	(*GetResidenceRequest)(nil),           // 4: gitlab.com.mercury.residenceservice.generated.model.v1.GetResidenceRequest
	(*GetResidenceResponse)(nil),          // 5: gitlab.com.mercury.residenceservice.generated.model.v1.GetResidenceResponse
	(*UpdateResidenceRequest)(nil),        // 6: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateResidenceRequest
	(*UpdateResidenceResponse)(nil),       // 7: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateResidenceResponse
	(*DeleteResidenceRequest)(nil),        // 8: gitlab.com.mercury.residenceservice.generated.model.v1.DeleteResidenceRequest
	(*DeleteResidenceResponse)(nil),       // 9: gitlab.com.mercury.residenceservice.generated.model.v1.DeleteResidenceResponse
	(*ListResidencesByIDsRequest)(nil),    // 10: gitlab.com.mercury.residenceservice.generated.model.v1.ListResidencesByIDsRequest
	(*ListResidencesByIDsResponse)(nil),   // 11: gitlab.com.mercury.residenceservice.generated.model.v1.ListResidencesByIDsResponse
	(*ListPopularResidencesRequest)(nil),  // 12: gitlab.com.mercury.residenceservice.generated.model.v1.ListPopularResidencesRequest
	(*ListPopularResidencesResponse)(nil), // 13: gitlab.com.mercury.residenceservice.generated.model.v1.ListPopularResidencesResponse
	(*CreateFlatPlanRequest)(nil),         // 14: gitlab.com.mercury.residenceservice.generated.model.v1.CreateFlatPlanRequest
	(*CreateFlatPlanResponse)(nil),        // 15: gitlab.com.mercury.residenceservice.generated.model.v1.CreateFlatPlanResponse
	(*UpdateFlatPlanRequest)(nil),         // 16: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateFlatPlanRequest
	(*UpdateFlatPlanResponse)(nil),        // 17: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateFlatPlanResponse
	(*DeleteFlatPlanRequest)(nil),         // 18: gitlab.com.mercury.residenceservice.generated.model.v1.DeleteFlatPlanRequest
	(*DeleteFlatPlanResponse)(nil),        // 19: gitlab.com.mercury.residenceservice.generated.model.v1.DeleteFlatPlanResponse
	(*ResidenceWrite)(nil),                // 20: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceWrite
	(*ResidenceRead)(nil),                 // 21: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceRead
	(*ResidencesSearchCriteria)(nil),      // 22: gitlab.com.mercury.residenceservice.generated.model.v1.ResidencesSearchCriteria
	(*ResidenceFlatPlanWrite)(nil),        // 23: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceFlatPlanWrite
	(*ResidenceFlatPlanRead)(nil),         // 24: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceFlatPlanRead
}
var file_residenceserviceapi_residence_service_proto_depIdxs = []int32{
	20, // 0: gitlab.com.mercury.residenceservice.generated.model.v1.CreateResidenceRequest.residence:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceWrite
	21, // 1: gitlab.com.mercury.residenceservice.generated.model.v1.CreateResidenceResponse.residence:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceRead
	22, // 2: gitlab.com.mercury.residenceservice.generated.model.v1.ListResidencesRequest.criteria:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.ResidencesSearchCriteria
	21, // 3: gitlab.com.mercury.residenceservice.generated.model.v1.ListResidencesResponse.residences:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceRead
	21, // 4: gitlab.com.mercury.residenceservice.generated.model.v1.GetResidenceResponse.residence:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceRead
	20, // 5: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateResidenceRequest.residence:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceWrite
	21, // 6: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateResidenceResponse.residence:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceRead
	21, // 7: gitlab.com.mercury.residenceservice.generated.model.v1.ListResidencesByIDsResponse.residences:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceRead
	22, // 8: gitlab.com.mercury.residenceservice.generated.model.v1.ListPopularResidencesRequest.criteria:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.ResidencesSearchCriteria
	21, // 9: gitlab.com.mercury.residenceservice.generated.model.v1.ListPopularResidencesResponse.residences:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceRead
	23, // 10: gitlab.com.mercury.residenceservice.generated.model.v1.CreateFlatPlanRequest.flat_plan:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceFlatPlanWrite
	24, // 11: gitlab.com.mercury.residenceservice.generated.model.v1.CreateFlatPlanResponse.flat_plan:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceFlatPlanRead
	23, // 12: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateFlatPlanRequest.flat_plan:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceFlatPlanWrite
	24, // 13: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateFlatPlanResponse.flat_plan:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceFlatPlanRead
	0,  // 14: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.CreateResidence:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.CreateResidenceRequest
	2,  // 15: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.ListResidences:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.ListResidencesRequest
	4,  // 16: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.GetResidence:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.GetResidenceRequest
	6,  // 17: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.UpdateResidence:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.UpdateResidenceRequest
	8,  // 18: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.DeleteResidence:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.DeleteResidenceRequest
	10, // 19: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.ListResidencesByIDs:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.ListResidencesByIDsRequest
	12, // 20: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.ListPopularResidences:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.ListPopularResidencesRequest
	14, // 21: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.CreateFlatPlan:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.CreateFlatPlanRequest
	16, // 22: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.UpdateFlatPlan:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.UpdateFlatPlanRequest
	18, // 23: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.DeleteFlatPlan:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.DeleteFlatPlanRequest
	1,  // 24: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.CreateResidence:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.CreateResidenceResponse
	3,  // 25: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.ListResidences:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.ListResidencesResponse
	5,  // 26: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.GetResidence:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.GetResidenceResponse
	7,  // 27: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.UpdateResidence:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.UpdateResidenceResponse
	9,  // 28: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.DeleteResidence:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.DeleteResidenceResponse
	11, // 29: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.ListResidencesByIDs:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.ListResidencesByIDsResponse
	13, // 30: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.ListPopularResidences:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.ListPopularResidencesResponse
	15, // 31: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.CreateFlatPlan:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.CreateFlatPlanResponse
	17, // 32: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.UpdateFlatPlan:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.UpdateFlatPlanResponse
	19, // 33: gitlab.com.mercury.residenceservice.generated.model.v1.ResidenceService.DeleteFlatPlan:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.DeleteFlatPlanResponse
	24, // [24:34] is the sub-list for method output_type
	14, // [14:24] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_residenceserviceapi_residence_service_proto_init() }
func file_residenceserviceapi_residence_service_proto_init() {
	if File_residenceserviceapi_residence_service_proto != nil {
		return
	}
	file_residenceserviceapi_residence_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_residenceserviceapi_residence_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResidenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResidenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResidencesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResidencesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResidenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResidenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResidenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResidenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResidenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResidenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResidencesByIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResidencesByIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPopularResidencesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPopularResidencesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFlatPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFlatPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFlatPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFlatPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFlatPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_residence_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFlatPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_residenceserviceapi_residence_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_residenceserviceapi_residence_service_proto_goTypes,
		DependencyIndexes: file_residenceserviceapi_residence_service_proto_depIdxs,
		MessageInfos:      file_residenceserviceapi_residence_service_proto_msgTypes,
	}.Build()
	File_residenceserviceapi_residence_service_proto = out.File
	file_residenceserviceapi_residence_service_proto_rawDesc = nil
	file_residenceserviceapi_residence_service_proto_goTypes = nil
	file_residenceserviceapi_residence_service_proto_depIdxs = nil
}
