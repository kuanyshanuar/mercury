// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: residenceserviceapi_lead_residence_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateLeadResidenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lead *LeadWrite `protobuf:"bytes,1,opt,name=lead,proto3" json:"lead,omitempty"`
}

func (x *CreateLeadResidenceRequest) Reset() {
	*x = CreateLeadResidenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_residence_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLeadResidenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeadResidenceRequest) ProtoMessage() {}

func (x *CreateLeadResidenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_residence_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLeadResidenceRequest.ProtoReflect.Descriptor instead.
func (*CreateLeadResidenceRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_residence_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateLeadResidenceRequest) GetLead() *LeadWrite {
	if x != nil {
		return x.Lead
	}
	return nil
}

type CreateLeadResidenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateLeadResidenceResponse) Reset() {
	*x = CreateLeadResidenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_residence_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLeadResidenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeadResidenceResponse) ProtoMessage() {}

func (x *CreateLeadResidenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_residence_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLeadResidenceResponse.ProtoReflect.Descriptor instead.
func (*CreateLeadResidenceResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_residence_service_proto_rawDescGZIP(), []int{1}
}

type ListLeadResidencesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Criteria *LeadResidenceSearchCriteria `protobuf:"bytes,1,opt,name=criteria,proto3" json:"criteria,omitempty"`
}

func (x *ListLeadResidencesRequest) Reset() {
	*x = ListLeadResidencesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_residence_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLeadResidencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLeadResidencesRequest) ProtoMessage() {}

func (x *ListLeadResidencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_residence_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLeadResidencesRequest.ProtoReflect.Descriptor instead.
func (*ListLeadResidencesRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_residence_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListLeadResidencesRequest) GetCriteria() *LeadResidenceSearchCriteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

type ListLeadResidencesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leads []*LeadRead `protobuf:"bytes,1,rep,name=leads,proto3" json:"leads,omitempty"`
	Total int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListLeadResidencesResponse) Reset() {
	*x = ListLeadResidencesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_residence_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLeadResidencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLeadResidencesResponse) ProtoMessage() {}

func (x *ListLeadResidencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_residence_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLeadResidencesResponse.ProtoReflect.Descriptor instead.
func (*ListLeadResidencesResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_residence_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListLeadResidencesResponse) GetLeads() []*LeadRead {
	if x != nil {
		return x.Leads
	}
	return nil
}

func (x *ListLeadResidencesResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UpdateLeadResidenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeadId int64      `protobuf:"varint,1,opt,name=lead_id,json=leadId,proto3" json:"lead_id,omitempty"`
	Lead   *LeadWrite `protobuf:"bytes,2,opt,name=lead,proto3" json:"lead,omitempty"`
}

func (x *UpdateLeadResidenceRequest) Reset() {
	*x = UpdateLeadResidenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_residence_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLeadResidenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLeadResidenceRequest) ProtoMessage() {}

func (x *UpdateLeadResidenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_residence_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLeadResidenceRequest.ProtoReflect.Descriptor instead.
func (*UpdateLeadResidenceRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_residence_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateLeadResidenceRequest) GetLeadId() int64 {
	if x != nil {
		return x.LeadId
	}
	return 0
}

func (x *UpdateLeadResidenceRequest) GetLead() *LeadWrite {
	if x != nil {
		return x.Lead
	}
	return nil
}

type UpdateLeadResidenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateLeadResidenceResponse) Reset() {
	*x = UpdateLeadResidenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_residence_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLeadResidenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLeadResidenceResponse) ProtoMessage() {}

func (x *UpdateLeadResidenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_residence_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLeadResidenceResponse.ProtoReflect.Descriptor instead.
func (*UpdateLeadResidenceResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_residence_service_proto_rawDescGZIP(), []int{5}
}

type DeleteLeadResidenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeadId int64 `protobuf:"varint,1,opt,name=lead_id,json=leadId,proto3" json:"lead_id,omitempty"`
}

func (x *DeleteLeadResidenceRequest) Reset() {
	*x = DeleteLeadResidenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_residence_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLeadResidenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLeadResidenceRequest) ProtoMessage() {}

func (x *DeleteLeadResidenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_residence_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLeadResidenceRequest.ProtoReflect.Descriptor instead.
func (*DeleteLeadResidenceRequest) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_residence_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteLeadResidenceRequest) GetLeadId() int64 {
	if x != nil {
		return x.LeadId
	}
	return 0
}

type DeleteLeadResidenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteLeadResidenceResponse) Reset() {
	*x = DeleteLeadResidenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_residenceserviceapi_lead_residence_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLeadResidenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLeadResidenceResponse) ProtoMessage() {}

func (x *DeleteLeadResidenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_residenceserviceapi_lead_residence_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLeadResidenceResponse.ProtoReflect.Descriptor instead.
func (*DeleteLeadResidenceResponse) Descriptor() ([]byte, []int) {
	return file_residenceserviceapi_lead_residence_service_proto_rawDescGZIP(), []int{7}
}

var File_residenceserviceapi_lead_residence_service_proto protoreflect.FileDescriptor

var file_residenceserviceapi_lead_residence_service_proto_rawDesc = []byte{
	0x0a, 0x30, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x61, 0x70, 0x69, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x36, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x2e, 0x72, 0x65, 0x73, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x70, 0x69, 0x5f,
	0x6c, 0x65, 0x61, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x73, 0x0a, 0x1a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x6c, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x65, 0x61, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x04, 0x6c, 0x65, 0x61, 0x64, 0x22,
	0x1d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8c,
	0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6f, 0x0a, 0x08,
	0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x53,
	0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0x8a, 0x01,
	0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x05,
	0x6c, 0x65, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69,
	0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79,
	0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x61, 0x64, 0x52, 0x05, 0x6c,
	0x65, 0x61, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x8c, 0x01, 0x0a, 0x1a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x65, 0x61,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64,
	0x49, 0x64, 0x12, 0x55, 0x0a, 0x04, 0x6c, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x04, 0x6c, 0x65, 0x61, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x49, 0x64, 0x22,
	0x1d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xa0,
	0x06, 0x0a, 0x15, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xc0, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xbd, 0x01, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x51, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xc0, 0x01, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x53, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xc0,
	0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x53, 0x2e, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2e,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x2f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_residenceserviceapi_lead_residence_service_proto_rawDescOnce sync.Once
	file_residenceserviceapi_lead_residence_service_proto_rawDescData = file_residenceserviceapi_lead_residence_service_proto_rawDesc
)

func file_residenceserviceapi_lead_residence_service_proto_rawDescGZIP() []byte {
	file_residenceserviceapi_lead_residence_service_proto_rawDescOnce.Do(func() {
		file_residenceserviceapi_lead_residence_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_residenceserviceapi_lead_residence_service_proto_rawDescData)
	})
	return file_residenceserviceapi_lead_residence_service_proto_rawDescData
}

var file_residenceserviceapi_lead_residence_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_residenceserviceapi_lead_residence_service_proto_goTypes = []interface{}{
	(*CreateLeadResidenceRequest)(nil),  // 0: gitlab.com.mercury.residenceservice.generated.model.v1.CreateLeadResidenceRequest
	(*CreateLeadResidenceResponse)(nil), // 1: gitlab.com.mercury.residenceservice.generated.model.v1.CreateLeadResidenceResponse
	(*ListLeadResidencesRequest)(nil),   // 2: gitlab.com.mercury.residenceservice.generated.model.v1.ListLeadResidencesRequest
	(*ListLeadResidencesResponse)(nil),  // 3: gitlab.com.mercury.residenceservice.generated.model.v1.ListLeadResidencesResponse
	(*UpdateLeadResidenceRequest)(nil),  // 4: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateLeadResidenceRequest
	(*UpdateLeadResidenceResponse)(nil), // 5: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateLeadResidenceResponse
	(*DeleteLeadResidenceRequest)(nil),  // 6: gitlab.com.mercury.residenceservice.generated.model.v1.DeleteLeadResidenceRequest
	(*DeleteLeadResidenceResponse)(nil), // 7: gitlab.com.mercury.residenceservice.generated.model.v1.DeleteLeadResidenceResponse
	(*LeadWrite)(nil),                   // 8: gitlab.com.mercury.residenceservice.generated.model.v1.LeadWrite
	(*LeadResidenceSearchCriteria)(nil), // 9: gitlab.com.mercury.residenceservice.generated.model.v1.LeadResidenceSearchCriteria
	(*LeadRead)(nil),                    // 10: gitlab.com.mercury.residenceservice.generated.model.v1.LeadRead
}
var file_residenceserviceapi_lead_residence_service_proto_depIdxs = []int32{
	8,  // 0: gitlab.com.mercury.residenceservice.generated.model.v1.CreateLeadResidenceRequest.lead:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.LeadWrite
	9,  // 1: gitlab.com.mercury.residenceservice.generated.model.v1.ListLeadResidencesRequest.criteria:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.LeadResidenceSearchCriteria
	10, // 2: gitlab.com.mercury.residenceservice.generated.model.v1.ListLeadResidencesResponse.leads:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.LeadRead
	8,  // 3: gitlab.com.mercury.residenceservice.generated.model.v1.UpdateLeadResidenceRequest.lead:type_name -> gitlab.com.mercury.residenceservice.generated.model.v1.LeadWrite
	0,  // 4: gitlab.com.mercury.residenceservice.generated.model.v1.LeadResidencesService.CreateLeadResidence:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.CreateLeadResidenceRequest
	2,  // 5: gitlab.com.mercury.residenceservice.generated.model.v1.LeadResidencesService.ListLeadResidences:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.ListLeadResidencesRequest
	4,  // 6: gitlab.com.mercury.residenceservice.generated.model.v1.LeadResidencesService.UpdateLeadResidence:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.UpdateLeadResidenceRequest
	6,  // 7: gitlab.com.mercury.residenceservice.generated.model.v1.LeadResidencesService.DeleteLeadResidence:input_type -> gitlab.com.mercury.residenceservice.generated.model.v1.DeleteLeadResidenceRequest
	1,  // 8: gitlab.com.mercury.residenceservice.generated.model.v1.LeadResidencesService.CreateLeadResidence:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.CreateLeadResidenceResponse
	3,  // 9: gitlab.com.mercury.residenceservice.generated.model.v1.LeadResidencesService.ListLeadResidences:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.ListLeadResidencesResponse
	5,  // 10: gitlab.com.mercury.residenceservice.generated.model.v1.LeadResidencesService.UpdateLeadResidence:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.UpdateLeadResidenceResponse
	7,  // 11: gitlab.com.mercury.residenceservice.generated.model.v1.LeadResidencesService.DeleteLeadResidence:output_type -> gitlab.com.mercury.residenceservice.generated.model.v1.DeleteLeadResidenceResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_residenceserviceapi_lead_residence_service_proto_init() }
func file_residenceserviceapi_lead_residence_service_proto_init() {
	if File_residenceserviceapi_lead_residence_service_proto != nil {
		return
	}
	file_residenceserviceapi_lead_residence_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_residenceserviceapi_lead_residence_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLeadResidenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_lead_residence_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLeadResidenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_lead_residence_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLeadResidencesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_lead_residence_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLeadResidencesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_lead_residence_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLeadResidenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_lead_residence_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLeadResidenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_lead_residence_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLeadResidenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_residenceserviceapi_lead_residence_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLeadResidenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_residenceserviceapi_lead_residence_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_residenceserviceapi_lead_residence_service_proto_goTypes,
		DependencyIndexes: file_residenceserviceapi_lead_residence_service_proto_depIdxs,
		MessageInfos:      file_residenceserviceapi_lead_residence_service_proto_msgTypes,
	}.Build()
	File_residenceserviceapi_lead_residence_service_proto = out.File
	file_residenceserviceapi_lead_residence_service_proto_rawDesc = nil
	file_residenceserviceapi_lead_residence_service_proto_goTypes = nil
	file_residenceserviceapi_lead_residence_service_proto_depIdxs = nil
}
