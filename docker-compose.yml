version: '3.5'

services:
  postgres:
    image: postgres:13.4
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - postgres_storage:/var/lib/postgresql/data:z
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password

  migrations:
    image: registry.gitlab.com/shtabkvartir/mercury/mercury-data-migration:latest
    ports:
      - '6464:6464'
    environment:
      - DSN=user=user password=password host=postgres port=5432 dbname=postgres sslmode=disable
    volumes:
      - ./migrations/postgresql:/migrations
    depends_on:
      - postgres

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - redis_storage:/data

  minio:
    image: minio/minio:latest
    ports:
      - '9000:9000'
      - '9002:9002'
    environment:
      MINIO_ACCESS_KEY_ID: 7bOk9Rub992EOrP8
      MINIO_SECRET_ACCESS_KEY: D3Gq8LQtw26AyU6Bvd2ZldYeK44Zwtv6
      MINIO_ROOT_USER: mercury
      MINIO_ROOT_PASSWORD: minio123
    command: server --console-address ":9002" /data
    volumes:
      - minio_storage:/data

#  prometheus:
#    image: prom/prometheus
#    ports:
#      - '9090:9090'
#    volumes:
#      - ./docker/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:Z
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--storage.tsdb.path=/prometheus'
#      - '--storage.tsdb.retention=20d'
#      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
#      - '--web.console.templates=/usr/share/prometheus/consoles'

#  grafana:
#    container_name: grafana_container
#    image: grafana/grafana
#    ports:
#      - '3000:3000'
#    volumes:
#      - grafana_storage:/var/lib/grafana

  jaeger:
    image: jaegertracing/all-in-one:1.21
    restart: always
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - '5775:5775/udp'
      - '6831:6831/udp'
      - '6832:6832/udp'
      - '5778:5778'
      - '16686:16686'
      - '14268:14268'
      - '14250:14250'
      - '9411:9411'

  app:
    image: golang:1.19-alpine
    working_dir: /app
    command: go run cmd/app/main.go
    env_file:
      - local.env
    ports:
      - '8000:8000'
    volumes:
      - ./:/app
    depends_on:
      - postgres
      - redis
      - minio

  leads-worker:
    image: golang:1.19-alpine
    working_dir: /app
    command: go run cmd/leadsworker/main.go
    env_file:
      - local.env
    volumes:
      - ./:/app
    depends_on:
      - postgres

  contacts-worker:
    image: golang:1.19-alpine
    working_dir: /app
    command: go run cmd/contactsworker/main.go
    env_file:
      - local.env
    volumes:
      - ./:/app
    depends_on:
      - postgres
      - redis

volumes:
  postgres_storage:
    driver: local
  redis_storage:
    driver: local
  minio_storage:
    driver: local
  grafana_storage:
    driver: local